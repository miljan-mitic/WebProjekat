// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace Projekat.Migrations
{
    [DbContext(typeof(GazdinstvoContext))]
    [Migration("20220315232103_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Models.ClanPorodice", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("RadnaSnagaID")
                        .HasColumnType("int");

                    b.Property<string>("SrednjeSlovo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.HasKey("ID");

                    b.HasIndex("RadnaSnagaID");

                    b.ToTable("ClanoviPorodice");
                });

            modelBuilder.Entity("Models.Gazdinstvo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("BrojVlasnika")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("RegistracioniBroj")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Gazdinstva");
                });

            modelBuilder.Entity("Models.Parcela", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GazdinstvoID")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<double>("Povrsina")
                        .HasColumnType("float");

                    b.Property<string>("RegistracioniBroj")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("GazdinstvoID");

                    b.ToTable("Parcele");
                });

            modelBuilder.Entity("Models.RadnaSnaga", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("BrojClanovaPorodice")
                        .HasColumnType("int");

                    b.Property<int>("BrojRadnika")
                        .HasColumnType("int");

                    b.Property<int?>("GazdinstvoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("GazdinstvoID");

                    b.ToTable("RadneSnage");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nadimak")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("Plata")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("RadnaSnagaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RadnaSnagaID");

                    b.ToTable("Radnici");
                });

            modelBuilder.Entity("Models.Upravlja", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("RadnikID")
                        .HasColumnType("int");

                    b.Property<int?>("VoziloMehanizacijaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RadnikID");

                    b.HasIndex("VoziloMehanizacijaID");

                    b.ToTable("Upravljanje");
                });

            modelBuilder.Entity("Models.Vlasnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClanPorodiceID")
                        .HasColumnType("int");

                    b.Property<int?>("GazdinstvoID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ClanPorodiceID");

                    b.HasIndex("GazdinstvoID");

                    b.ToTable("Vlasnici");
                });

            modelBuilder.Entity("Models.VoziloMehanizacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("GazdinstvoID")
                        .HasColumnType("int");

                    b.Property<string>("Marka")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Registracija")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("ID");

                    b.HasIndex("GazdinstvoID");

                    b.ToTable("VozilaMehanizacije");
                });

            modelBuilder.Entity("Models.ClanPorodice", b =>
                {
                    b.HasOne("Models.RadnaSnaga", "RadnaSnaga")
                        .WithMany("ClanoviPorodice")
                        .HasForeignKey("RadnaSnagaID");

                    b.Navigation("RadnaSnaga");
                });

            modelBuilder.Entity("Models.Parcela", b =>
                {
                    b.HasOne("Models.Gazdinstvo", "Gazdinstvo")
                        .WithMany("Parcele")
                        .HasForeignKey("GazdinstvoID");

                    b.Navigation("Gazdinstvo");
                });

            modelBuilder.Entity("Models.RadnaSnaga", b =>
                {
                    b.HasOne("Models.Gazdinstvo", "Gazdinstvo")
                        .WithMany("RadneSnage")
                        .HasForeignKey("GazdinstvoID");

                    b.Navigation("Gazdinstvo");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.HasOne("Models.RadnaSnaga", "RadnaSnaga")
                        .WithMany("Radnici")
                        .HasForeignKey("RadnaSnagaID");

                    b.Navigation("RadnaSnaga");
                });

            modelBuilder.Entity("Models.Upravlja", b =>
                {
                    b.HasOne("Models.Radnik", "Radnik")
                        .WithMany("VozilaMehanizacije")
                        .HasForeignKey("RadnikID");

                    b.HasOne("Models.VoziloMehanizacija", "VoziloMehanizacija")
                        .WithMany("Radnici")
                        .HasForeignKey("VoziloMehanizacijaID");

                    b.Navigation("Radnik");

                    b.Navigation("VoziloMehanizacija");
                });

            modelBuilder.Entity("Models.Vlasnik", b =>
                {
                    b.HasOne("Models.ClanPorodice", "ClanPorodice")
                        .WithMany("Poseduje")
                        .HasForeignKey("ClanPorodiceID");

                    b.HasOne("Models.Gazdinstvo", "Gazdinstvo")
                        .WithMany("Vlasnici")
                        .HasForeignKey("GazdinstvoID");

                    b.Navigation("ClanPorodice");

                    b.Navigation("Gazdinstvo");
                });

            modelBuilder.Entity("Models.VoziloMehanizacija", b =>
                {
                    b.HasOne("Models.Gazdinstvo", "Gazdinstvo")
                        .WithMany("VozilaMehanizacije")
                        .HasForeignKey("GazdinstvoID");

                    b.Navigation("Gazdinstvo");
                });

            modelBuilder.Entity("Models.ClanPorodice", b =>
                {
                    b.Navigation("Poseduje");
                });

            modelBuilder.Entity("Models.Gazdinstvo", b =>
                {
                    b.Navigation("Parcele");

                    b.Navigation("RadneSnage");

                    b.Navigation("Vlasnici");

                    b.Navigation("VozilaMehanizacije");
                });

            modelBuilder.Entity("Models.RadnaSnaga", b =>
                {
                    b.Navigation("ClanoviPorodice");

                    b.Navigation("Radnici");
                });

            modelBuilder.Entity("Models.Radnik", b =>
                {
                    b.Navigation("VozilaMehanizacije");
                });

            modelBuilder.Entity("Models.VoziloMehanizacija", b =>
                {
                    b.Navigation("Radnici");
                });
#pragma warning restore 612, 618
        }
    }
}
